---
interface Props {
  href: string;
  external?: boolean;
  class?: string;
  target?: string;
  rel?: string;
}

const {
  href,
  external = href.startsWith('http') || href.startsWith('//'),
  class: className,
  target,
  rel,
  ...rest
} = Astro.props;

const isExternal = external || target === '_blank';
const linkProps = isExternal
  ? {
      target: target || '_blank',
      rel: rel || 'noopener noreferrer'
    }
  : {};
---

<a href={href} class:list={['styled-link', className]} {...linkProps} {...rest}>
  <slot />{
    isExternal && (
      <span class='text-text-secondary ml-[2px] inline-block align-text-bottom'>
        <svg
          class='anchor-icon m-0 p-0'
          width='15'
          height='15'
          viewBox='0 0 16 16'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            d='M8 5H5C3.89543 5 3 5.89543 3 7V12C3 13.1046 3.89543 14 5 14H10C11.1046 14 12 13.1046 12 12V8.5'
            stroke='currentColor'
            stroke-width='1.25'
            stroke-linecap='round'
            stroke-linejoin='round'
          />
          <path
            d='M7.5 9.5L14 3M14 3V7M14 3H10'
            stroke='currentColor'
            stroke-width='1.25'
            stroke-linecap='round'
            stroke-linejoin='round'
          />
        </svg>
      </span>
    )
  }
</a>
