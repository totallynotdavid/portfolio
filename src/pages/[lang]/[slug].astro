---
import { getCollection } from 'astro:content';
import mdxComponents from '@/components/mdx';
import PostLayout from '@/layouts/PostLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { parseLocalizedId } from '@/i18n/utils';
import { i18nConfig } from '@/i18n/config';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  const paths: { params: { lang: string; slug: string }; props: { post: any } }[] = [];

  for (const post of posts) {
    const { base, lang } = parseLocalizedId(post.id);
    const effectiveSlug = post.data.slugOverride || base;

    if (lang in i18nConfig.languages) {
      paths.push({
        params: { lang, slug: effectiveSlug },
        props: { post }
      });
    }
  }

  return paths;
}

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
---

<PostLayout
  title={post.data.title}
  description={post.data.description || ''}
  headings={headings}
  pubDate={post.data.pubDate}
  updatedDate={post.data.updatedDate}
  keywords={post.data.keywords}
  ogImage={post.data.ogImage}
>
  <Content components={mdxComponents} />
</PostLayout>
